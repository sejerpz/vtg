#labels Phase-Deploy,Featured
#How to compile and install Vala Toys for GEdit

== Prerequisites ==

_Last released version:_

 * glib (at least 2.12.0)
 * gtk+ (at least 2.10.0)
 * gedit (at least 2.22.0)
 * ~~gtksourcecompletion 0.7.0 - ~~  - no longer required
 * ~~gnu readline (required only for vsc-shell)~~ - no longer supported
 * vala 0.9.4

== Standard compile instruction for system-wide installation (EASIER)==

{{{
./configure --prefix=/usr
make
sudo make install
}}}

== Local User installation and other installation tips (DIFFICULT) ==

==Compiling==
Having installed the required dependecies,
you can compile _Vtg_ with this command if you downloaded the source tarball:

{{{
./configure --prefix="your home dir"/.gnome2/gedit/plugins --datadir="your home dir"/.gnome2/gedit/plugins
make
}}}

or with this if you checked out vtg from the svn repository:

{{{
./autogen.sh --prefix="your home dir"/.gnome2/gedit/plugins --datadir="your home dir"/.gnome2/gedit/plugins
make
}}}

*Alternative method*

To workaround the [http://code.google.com/p/vtg/issues/detail?id=135 issue 135], caused by the inconsistent generation of the configure script by different version of autotools, I have included in the repository the files required to compile without using autogen.sh.

In this case to compile vtg you should use:
{{{
aclocal
automake --add-missing
intltoolize --force
./configure --prefix="your home dir"/.gnome2/gedit/plugins --datadir="your home dir"/.gnome2/gedit/plugins
make
}}}

*TIP*

If you get this error on a 64bit system
{{{
/usr/bin/ld: ../gsc-0.7.0/gtksourcecompletion/.libs/libgtksourcecompletion-2.0.a(gsc-provider.o): relocation R_X86_64_32S against `.text' can not be used when making a shared object; recompile with -fPIC
../gsc-0.7.0/gtksourcecompletion/.libs/libgtksourcecompletion-2.0.a: could not read symbols: Bad value
collect2: ld returned 1 exit status
}}}

try to recompile with CFLAGS specified:

{{{
make CFLAGS="-g -O2 -fPIC"
}}}


=== Installing ===

To install for the current user, from the root folder of the _Vtg_ distribution, do:

{{{
mkdir -p ~/.gnome2/gedit/plugins/vtg
cp -r images ~/.gnome2/gedit/plugins/vtg/
mkdir ~/.gnome2/gedit/plugins/vtg/ui
cp ui/vtg.ui ~/.gnome2/gedit/plugins/vtg/ui/ 
cp vtg/vtg.gedit-plugin ~/.gnome2/gedit/plugins/
cp vtg/.libs/libvtg.so ~/.gnome2/gedit/plugins/
}}}

The required files to install & integrate vala-gen-project with vtg:

{{{
mkdir -p ~/.gnome2/gedit/plugins/vtg/templates
cp -r gen-project/templates/*.ini  ~/.gnome2/gedit/plugins/vtg/
cp -r gen-project/templates/*.png  ~/.gnome2/gedit/plugins/vtg/
cp -r gen-project/templates/*.tar.gz  ~/.gnome2/gedit/plugins/vtg/
mkdir -p ~/.gnome2/gedit/plugins/vtg/licenses
cp -r gen-project/licenses/*.txt ~/.gnome2/gedit/plugins/vtg/licenses/
cp gen-project/ui/gen-project.ui ~/.gnome2/gedit/plugins/vtg/ui/ 
}}}

Now we have to copy vala-gen-project from the gen-project folder to one included in the executable path (eg. /usr/local/bin)

{{{
sudo cp gen-project/vala-gen-project /usr/local/bin
}}}